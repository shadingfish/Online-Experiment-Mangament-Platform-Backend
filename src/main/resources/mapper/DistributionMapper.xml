<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sof_eng.Mapper.DistributionMapper">
    <!-- 在mapper标签内定义resultMap -->
    <resultMap id="distributionResultMap" type="com.sof_eng.model.DTO.Distribution">
        <!-- 配置每个属性的映射关系 -->
        <id property="id" column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result property="expId" column="exp_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result property="expName" column="exp_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="url" column="url" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="participant" column="participant" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="participantId" column="participant_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result property="activeTime" column="active_time" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="addDistribution" parameterType="com.sof_eng.model.DTO.Distribution">
        INSERT INTO distribution (exp_id, exp_name, url, participant, participant_id, create_time, active_time)
        VALUES (#{expId}, #{expName}, #{url}, #{participant}, #{participantId}, #{createTime}, #{activeTime})
    </insert>

    <delete id="deleteDistributionById" parameterType="java.lang.Long">
        DELETE FROM distribution WHERE id = #{id}
    </delete>

    <update id="updateDistribution" parameterType="com.sof_eng.model.DTO.Distribution">
        UPDATE distribution SET
                                exp_id = #{expId},
                                exp_name = #{expName},
                                url = #{url},
                                participant = #{participant},
                                participant_id = #{participantId},
                                create_time = #{createTime},
                                active_time = #{activeTime}
        WHERE id = #{id}
    </update>

    <select id="getDistributionById" resultMap="distributionResultMap">
        SELECT * FROM distribution WHERE id = #{id}
    </select>

    <select id="getUsernameByExpId" resultType="java.lang.String">
        SELECT participant FROM distribution WHERE exp_id = #{expId}
    </select>

    <select id="getDistributionByParExp" resultMap="distributionResultMap">
        SELECT *
        FROM distribution
        WHERE exp_id = #{expId}
          AND participant = #{participant}
    </select>

    <select id="getListByUserId" resultMap="distributionResultMap">
        SELECT * FROM distribution WHERE participant_id = #{userId}
    </select>

</mapper>
